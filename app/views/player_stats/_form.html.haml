- if @player_stats.new_record?
  - url = player_player_stats_path(@player, @player_stats)
- else
  - url = player_player_stat_path(@player, @player_stats)

= form_for @player_stats, url: url do |f|

  - if @player_stats.errors.any?
    #error_explanation
      %h2= "#{pluralize(@player_stats.errors.count, "error")} prohibited this player_stat from being saved:"
      %ul
        - @player_stats.errors.full_messages.each do |msg|
          %li= msg

  .field
    = f.label :year
    = f.number_field :year
  .field
    = f.label :fgm
    = f.text_field :fgm, :autocomplete => :off
  .field
    = f.label :fga
    = f.text_field :fga, :autocomplete => :off
  .field
    = f.label :ftm
    = f.text_field :ftm, :autocomplete => :off
  .field
    = f.label :fta
    = f.text_field :fta, :autocomplete => :off
  .field
    = f.label :reb
    = f.text_field :reb, :autocomplete => :off
  .field
    = f.label :ast
    = f.text_field :ast, :autocomplete => :off
  .field
    = f.label :stl
    = f.text_field :stl, :autocomplete => :off
  .field
    = f.label :blk
    = f.text_field :blk, :autocomplete => :off
  .field
    = f.label :to
    = f.text_field :to, :autocomplete => :off
  .field
    = f.label :pts
    = f.text_field :pts, :autocomplete => :off
  .field
    = f.label :fpts_total
    = f.text_field :fpts_total, :autocomplete => :off
  .field
    = f.label :fpts_avg
    = f.text_field :fpts_avg, :autocomplete => :off
  .actions
    = f.submit 'Save', class: 'btn btn-primary'
